@use 'SuccessSvg.module' as success;
@use 'ErrorSvg.module' as error;

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 6rem 2rem;
  gap: 4rem;
}

.headText {
  font-size: 2.75rem;
  font-weight: 800;
  color: var(--black-color);
  text-transform: capitalize;

  span {
    color: var(--secondary-color);
  }

  @media screen and (min-width: 2000px) {
    font-size: 4rem;
  }

  @media screen and (max-width: 450px) {
    font-size: 2rem;
  }
}

.content {
  width: 100%;
  max-width: 1000px;
  min-height: 27.375rem;
  display: flex;
  justify-content: center;
  gap: 4rem;
  padding: 2rem;

  border-radius: 0.5rem;
  background-color: #fff;
  box-shadow: 0px 0px 25px -5px rgb(0 0 0 / 10%);

  @media screen and (max-width: 900px) {
    flex-direction: column;
  }
}

.links {
  display: grid;
  gap: 1rem;

  & > div {
    display: grid;
    align-items: center;
    grid-template-columns: auto 1fr;
    grid-template-rows: 1fr 1fr;
    column-gap: 1rem;

    :first-child {
      color: var(--secondary-color);
      grid-row: 1/3;
    }
  }

  color: var(--gray-color);
  font-weight: 500;
}

.form {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;

  div {
    width: 100%;
    border-radius: 10px;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
    position: relative;

    &:has(span.inputError) {
      input,
      textarea {
        border-color: red;
        
        &:focus + label::before {
          color: red;
        }
      }
    }

    label::before {
      content: attr(title);
      position: absolute;
      cursor: text;
      top: 0;
      left: 15px;
      line-height: 40px;
      font-size: 14px;
      color: #777;
      transition: 300ms all;
    }

    .labelBefore {
      line-height: 20px;
      font-size: 12px;
      top: -10px;
      background: #fff;
      padding: 0 6px;
      left: 9px;
    }

    input,
    textarea {
      width: 100%;
      padding: 0.95rem;
      border-radius: 7px;
      border: 1px solid #ccc;
      outline: none;

      &:focus {
        outline: 0;
        border-color: var(--secondary-color);
      }

      &::placeholder {
        color: transparent;
      }

      &:not(:placeholder-shown) + label::before {
        @extend .labelBefore;
        content: attr(data-title);
      }

      &:focus + label::before {
        @extend .labelBefore;
        color: var(--secondary-color);
      }
    }

    textarea {
      height: 170px;
      resize: none;
    }
  }

  button {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 200px;
    padding: 1.2rem 1rem;
    font-size: 1em;
    font-weight: 500;
    transition: all 0.5s ease-in-out;

    &:has(.success) {
      background-color: success.$checkmark-color;
    }

    &:has(.error) {
      background-color: error.$checkmark-color;
    }

    &:disabled {
      .buttonContent {
        cursor: not-allowed;
      }
    }

    .buttonContent {
      display: grid;
      place-items: center;
      height: 20px;

      & > * {
        height: 100%;
        width: 100%;
      }
    }

    .buttonSvg {
      bottom: 5px;
      width: 30px;
      height: 30px;
    }
  }

  @media screen and (max-width: 900px) {
    width: 100%;
  }
}

.inputError {
  font-size: 0.8em;
  color: red;
}
